name: Deploy Asset & Alert

on:
  push:
    branches: [ main ]
    paths:
      - 'msa-asset/**'
      - 'msa-sb-alert/**'
      - '.github/workflows/asset&alert-deploy.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: GitHub Repository 코드 체크아웃
        uses: actions/checkout@v4

      - name: JDK 17 설정
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle

      # application.properties 파일 동적 생성
      - name: Asset 서비스 설정 파일 생성
        run: |
          mkdir -p msa-asset/src/main/resources
          echo "${{ secrets.MSA_ASSET_CONFIG }}" > msa-asset/src/main/resources/application.yml
          echo "Asset 서비스 설정 파일 생성 완료"

      - name: Alert 서비스 설정 파일 생성
        run: |
          mkdir -p msa-sb-alert/src/main/resources
          echo "${{ secrets.MSA_ALERT_CONFIG }}" > msa-sb-alert/src/main/resources/application.yml
          echo "Alert 서비스 설정 파일 생성 완료"

      # 서비스 빌드
      - name: Asset 서비스 빌드
        run: |
          cd msa-asset
          chmod +x ./gradlew
          ./gradlew clean build -x test

      - name: Alert 서비스 빌드
        run: |
          cd msa-sb-alert
          chmod +x ./gradlew
          ./gradlew clean build -x test

      # EC2로 파일 업로드
      - name: EC2에 파일 업로드
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "msa-asset/build/libs/*.jar,msa-sb-alert/build/libs/*.jar,msa-asset/Dockerfile,msa-sb-alert/Dockerfile,docker-compose.yml"
          target: "/home/${{ secrets.EC2_USER }}/app-asset-alert"
          strip_components: 0

      # EC2에서 서비스 실행
      - name: EC2에서 서비스 실행
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script_stop: true
          script: |
            # Docker 및 Docker Compose 설치 확인
            if ! command -v docker &> /dev/null; then
              echo "Docker 설치 중..."
              sudo yum update -y
              sudo amazon-linux-extras install docker -y
              sudo service docker start
              sudo usermod -a -G docker $USER
            fi
            
            if ! command -v docker-compose &> /dev/null; then
              echo "Docker Compose 설치 중..."
              sudo curl -L "https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi
            
            # 서비스 배포 및 실행
            cd /home/$USER/app-asset-alert
            
            # 이전 서비스 중지 및 새 서비스 시작
            docker-compose -f docker-compose.yml down
            docker-compose -f docker-compose.yml up -d --build
            
            # 로그 확인
            sleep 5
            docker ps
            CONTAINER_ASSET=$(docker ps --format '{{.Names}}' | grep msa-asset)
            CONTAINER_ALERT=$(docker ps --format '{{.Names}}' | grep msa-sb-alert)
            docker logs $CONTAINER_ASSET || true
            docker logs $CONTAINER_ALERT || true
